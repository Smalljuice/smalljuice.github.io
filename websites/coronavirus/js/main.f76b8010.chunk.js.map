{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","confirmed","recovered","deaths","countries","getCountryData","bind","this","getData","Axios","get","resApi","resCountries","i","data","length","push","name","setState","value","sel","target","res","response","status","map","country","key","className","onChange","renderCountryOptions","displayType","thousandSeparator","React","Component","preloader","document","querySelector","window","onload","setTimeout","circle","style","opacity","preloader_two","setInterval","clearInterval","display","fadeOut","addEventListener","event","querySelectorAll","forEach","eye","x","getBoundingClientRect","left","clientWidth","y","top","clientHeight","rot","Math","atan2","clientX","clientY","PI","transform","ReactDOM","render"],"mappings":"qSAMqBA,G,wDAClB,WAAYC,GAAQ,IAAD,8BAChB,cAAMA,IAMTC,MAAQ,CACLC,UAAW,EACXC,UAAW,EACXC,OAAQ,EACRC,UAAW,IATX,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAFN,E,gEAiBhBC,KAAKC,Y,sKAMgBC,IAAMC,IAAI,kC,cAAzBC,E,gBACqBF,IAAMC,IAAI,4C,OAErC,IAFME,E,OACAR,EAAY,GACTS,EAAI,EAAGA,EAAID,EAAaE,KAAKV,UAAUW,OAAQF,IACrDT,EAAUY,KAAKJ,EAAaE,KAAKV,UAAUS,GAAGI,MAGjDV,KAAKW,SAAS,CACXjB,UAAWU,EAAOG,KAAKb,UAAUkB,MACjCjB,UAAWS,EAAOG,KAAKZ,UAAUiB,MACjChB,OAAQQ,EAAOG,KAAKX,OAAOgB,MAC3Bf,c,qLAMegB,G,0EACO,yEAArBA,EAAIC,OAAOF,M,yCACLZ,KAAKC,W,gCAIMC,IAAMC,IAAN,mDAAsDU,EAAIC,OAAOF,Q,OAA7EG,E,OACNf,KAAKW,SAAS,CACXjB,UAAWqB,EAAIR,KAAKb,UAAUkB,MAC9BjB,UAAWoB,EAAIR,KAAKZ,UAAUiB,MAC9BhB,OAAQmB,EAAIR,KAAKX,OAAOgB,Q,kDAKC,MAAxB,KAAII,SAASC,QACdjB,KAAKW,SAAS,CACXjB,UAAW,0DACXC,UAAW,0DACXC,OAAQ,4D,sKAQjB,OAAOI,KAAKP,MAAMI,UAAUqB,KAAI,SAACC,EAASb,GACvC,OAAO,4BAAQc,IAAKd,GAAIa,Q,+BAM3B,OACG,yBAAKE,UAAU,aACZ,wBAAIA,UAAU,qBAAd,gEAEA,4BAAQA,UAAU,uBAAuBC,SAAUtB,KAAKF,gBACrD,wGACCE,KAAKuB,wBAGT,yBAAKF,UAAU,6BACZ,6FACA,4BAAI,kBAAC,IAAD,CAAcT,MAAOZ,KAAKP,MAAMC,UAAW8B,YAAa,OAAQC,mBAAmB,MAG1F,yBAAKJ,UAAU,6BACZ,+GACA,4BAAI,kBAAC,IAAD,CAAcT,MAAOZ,KAAKP,MAAME,UAAW6B,YAAa,OAAQC,mBAAmB,MAG1F,yBAAKJ,UAAU,0BACZ,2EACA,4BAAI,kBAAC,IAAD,CAAcT,MAAOZ,KAAKP,MAAMG,OAAQ4B,YAAa,OAAQC,mBAAmB,W,GAhGlEC,IAAMC,YAyGjCC,EAAYC,SAASC,cAAc,iBAazCC,OAAOC,OAAS,WACbC,YAAW,YAZd,SAAiBC,GACdA,EAAOC,MAAMC,QAAU,EACvB,IAAMC,EAAgBC,aAAY,WAC/BJ,EAAOC,MAAMC,SAAW,IACpBF,EAAOC,MAAMC,SAAW,MACzBG,cAAcF,GACdT,EAAUO,MAAMK,QAAU,UAE7B,IAKAC,CAAQb,KACR,MAKNC,SAASC,cAAc,oBAAoBY,iBAAiB,aAC5D,SAAiBC,GACJd,SAASe,iBAAiB,QAChCC,SAAQ,SAAUC,GACnB,IAAIC,EAAKD,EAAIE,wBAAwBC,KAASH,EAAII,YAAc,EAC5DC,EAAKL,EAAIE,wBAAwBI,IAAQN,EAAIO,aAAe,EAE5DC,EADSC,KAAKC,MAAMb,EAAMc,QAAUV,EAAGJ,EAAMe,QAAUP,IACtC,IAAMI,KAAKI,KAAO,EAAK,IAC5Cb,EAAIX,MAAMyB,UAAY,UAAYN,EAAM,aCxI9CO,IAASC,OAAO,kBAAC,EAAD,MAASjC,SAASC,cAAc,oB","file":"static/js/main.f76b8010.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport NumberFormat from 'react-number-format';\r\nimport \"./style.css\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.getCountryData = this.getCountryData.bind(this);\r\n   };\r\n\r\n\r\n   // Создание динамических объектов, значения которых позже заменятся значениями из API\r\n   state = {\r\n      confirmed: 0,\r\n      recovered: 0,\r\n      deaths: 0,\r\n      countries: []\r\n   };\r\n\r\n\r\n   // Моментальный вызов компонента ниже\r\n   componentDidMount() {\r\n      this.getData();\r\n   };\r\n\r\n\r\n   // Получение данных о всей информации через API\r\n   async getData() {\r\n      const resApi = await Axios.get(\"https://covid19.mathdro.id/api\");\r\n      const resCountries = await Axios.get(\"https://covid19.mathdro.id/api/countries\");\r\n      const countries = [];\r\n      for (let i = 0; i < resCountries.data.countries.length; i++) {\r\n         countries.push(resCountries.data.countries[i].name);\r\n      };\r\n\r\n      this.setState({\r\n         confirmed: resApi.data.confirmed.value,\r\n         recovered: resApi.data.recovered.value,\r\n         deaths: resApi.data.deaths.value,\r\n         countries\r\n      });\r\n   };\r\n\r\n\r\n   // Получение данных о странах через API и вывод ошибки (при её присутствии)\r\n   async getCountryData(sel) {\r\n      if (sel.target.value === \"По всему миру\") {\r\n         return this.getData();\r\n      };\r\n\r\n      try {\r\n         const res = await Axios.get(`https://covid19.mathdro.id/api/countries/${sel.target.value}`);\r\n         this.setState({\r\n            confirmed: res.data.confirmed.value,\r\n            recovered: res.data.recovered.value,\r\n            deaths: res.data.deaths.value\r\n         });\r\n      }\r\n\r\n      catch (err) {\r\n         if (err.response.status === 404)\r\n            this.setState({\r\n               confirmed: \"Нет данных\",\r\n               recovered: \"Нет данных\",\r\n               deaths: \"Нет данных\"\r\n            });\r\n      };\r\n   };\r\n\r\n\r\n   // Выбор стран\r\n   renderCountryOptions() {\r\n      return this.state.countries.map((country, i) => {\r\n         return <option key={i}>{country}</option>\r\n      });\r\n   };\r\n\r\n   // Вся информация\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <h1 className=\"stats wow flipInX\">Статистика</h1>\r\n\r\n            <select className=\"dropdown wow flipInX\" onChange={this.getCountryData}>\r\n               <option>По всему миру</option>\r\n               {this.renderCountryOptions()}\r\n            </select>\r\n\r\n            <div className=\"box confirmed wow flipInX\">\r\n               <h3>Заражённых:</h3>\r\n               <h4><NumberFormat value={this.state.confirmed} displayType={'text'} thousandSeparator={true} /></h4>\r\n            </div>\r\n\r\n            <div className=\"box recovered wow flipInX\">\r\n               <h3>Выздоровевших:</h3>\r\n               <h4><NumberFormat value={this.state.recovered} displayType={'text'} thousandSeparator={true} /></h4>\r\n            </div>\r\n\r\n            <div className=\"box deaths wow flipInX\">\r\n               <h3>Смертей:</h3>\r\n               <h4><NumberFormat value={this.state.deaths} displayType={'text'} thousandSeparator={true} /></h4>\r\n            </div>\r\n         </div>\r\n      );\r\n   };\r\n};\r\n\r\n\r\n// Прелоудер\r\nconst preloader = document.querySelector('#preloader_js');\r\n\r\nfunction fadeOut(circle) {\r\n   circle.style.opacity = 1;\r\n   const preloader_two = setInterval(function () {\r\n      circle.style.opacity -= 0.05;\r\n      if (circle.style.opacity <= 0.05) {\r\n         clearInterval(preloader_two);\r\n         preloader.style.display = \"none\";\r\n      }\r\n   }, 15);\r\n}\r\n\r\nwindow.onload = function () {\r\n   setTimeout(function () {\r\n      fadeOut(preloader);\r\n   }, 1000);\r\n};\r\n\r\n\r\n// Смайлики\r\ndocument.querySelector('.covid_and_faces').addEventListener('mousemove', eyeball);\r\nfunction eyeball(event) {\r\n   var eye = document.querySelectorAll('.eye');\r\n   eye.forEach(function (eye) {\r\n      let x = (eye.getBoundingClientRect().left) + (eye.clientWidth / 2);\r\n      let y = (eye.getBoundingClientRect().top) + (eye.clientHeight / 2);\r\n      let radian = Math.atan2(event.clientX - x, event.clientY - y);\r\n      let rot = (radian * (180 / Math.PI) * -1) + 270;\r\n      eye.style.transform = \"rotate(\" + rot + \"deg)\";\r\n   });\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#covid19-info'));"],"sourceRoot":""}